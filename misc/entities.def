// Tremulous entity definition file for GTKRadiant
// Tim Angus <tma@op.ath.cx> 08/09/03

// Based on entities.def from GTKRadiant 1.3.11 which in turn is based on...
// Based on draft by Suicide 20 7.30.99 and inolen 9-3-99
// Upgraded by Eutectic: eutectic@ritualistic.com
// (visible models added by raYGunn - paths provided by Suicide 20)
// (terrain information added to func_group entity by Paul Jaquays)
// Q3Map2 entitys/keys added by ydnar
// Version: 1.5
// Last updated: 2003-06-09

//=============================================================================

LIGHT ENTITY

//=============================================================================


/*QUAKED light (.65 .65 1) (-8 -8 -8) (8 8 8) LINEAR NOANGLE UNUSED1 UNUSED2 NOGRIDLIGHT
Non-displayed point light source. The -pointscale and -scale arguments to Q3Map2 affect the brightness of these lights. The -skyscale argument affects brightness of entity sun lights.

-------- KEYS --------
_light OR light: overrides the default 300 intensity.

_color: weighted RGB value of light color (default white - 1.0 1.0 1.0).

target: Lights pointed at a target will be spotlights.

radius: overrides the default 64 unit radius of a spotlight at the target point.

-------- Q3MAP2 KEYS --------
_sun: Set this key to 1 on a spotlight to make an infinite sun light.

fade: Fades light attenuation. Only affects linear lights.

scale: Scales light attentation, from SOF2/JK2. Scales the "light" value.

-------- SPAWNFLAGS --------
LINEAR: Use a linear falloff. Default is inverse distance squared (more realistic).

NOANGLE: Ignore angle attenuation.

NOGRIDLIGHT: Do not affect the lightgrid (dynamic entity lighting).
*/

/*QUAKED lightJunior (0 0.7 0.3) (-6 -6 -6) (6 6 6) LINEAR NOANGLE UNUSED1 UNUSED2 NOGRIDLIGHT

Non-displayed point light source THAT ONLY AFFECTS ENTITIES (lightgrid). The -pointscale and -scale arguments to Q3Map2 affect the brightness of these lights. The -skyscale argument affects brightness of entity sun lights.

-------- KEYS --------
_light OR light: overrides the default 300 intensity.

_color: weighted RGB value of light color (default white - 1.0 1.0 1.0).

target: Lights pointed at a target will be spotlights.

radius: overrides the default 64 unit radius of a spotlight at the target point.

-------- Q3MAP2 KEYS --------
_sun: Set this key to 1 on a spotlight to make an infinite sun light.

fade: Fades light attenuation. Only affects linear lights.

scale: Scales light attentation, from SOF2/JK2. Scales the "light" value.

-------- SPAWNFLAGS --------
LINEAR: Use a linear falloff. Default is inverse distance squared (more realistic).

NOANGLE: Ignore angle attenuation.

NOGRIDLIGHT: Do not affect the lightgrid (dynamic entity lighting). Setting this spawnflag will disable this light entirely.
*/

//=============================================================================

FUNC_* ENTITIES

//=============================================================================

/*QUAKED func_bobbing (0 .5 .8) ? X_AXIS Y_AXIS
Solid entity that oscillates back and forth in a linear motion. By default, it will have an amount of displacement in either direction equal to the dimension of the brush in the axis in which it's bobbing. Entity bobs on the Z axis (up-down) by default. It can also emit sound if the "noise" key is set. Will crush the player when blocked.

-------- KEYS --------
speed: amount of time in seconds for one complete oscillation cycle (default 4).

height: sets the amount of travel of the oscillation movement (default 32). 

phase: sets the start offset of the oscillation cycle. Values must be 0 < phase < 1. Any integer phase value is the same as no offset (default 0).

noise: path/name of .wav file to play. Use looping sounds only (eg. sound/world/drone6.wav - See Notes).

model2: path/name of model to include (eg: models/mapobjects/jets/jets01.md3).

origin: alternate method of setting XYZ origin of sound and .md3 model included with entity (See Notes).

light: constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).

color: constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- Q3MAP2 KEYS --------
_targetname: Used to attach a misc_model entity to this entity.

_lightmapscale: Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).

_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.

_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.

_celshader: Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.

-------- Q3MAP2 TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.

_layers OR layers: Integer value is the number unique root shaders that will be use on the terrain.

_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.

-------- SPAWNFLAGS --------
X_AXIS: entity will bob along the X axis.
Y_AXIS: entity will bob along the Y axis.

-------- NOTES --------
In order for the sound to be emitted from the entity, it is recommended to include a brush with an origin shader at its center, otherwise the sound will not follow the entity as it moves. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").
*/

//=============================================================================

/*QUAKED func_button (0 .5 .8) ?
When a button is touched by a player, it moves in the direction set by the "angle" key, triggers all its targets, stays pressed by an amount of time set by the "wait" key, then returns to it's original position where it can be operated again.

-------- KEYS --------
angle: determines the direction in which the button will move (up = -1, down = -2).

target: all entities with a matching targetname will be triggered.

speed: speed of button's displacement (default 40).

wait: number of seconds button stays pressed (default 1, -1 = return immediately).

lip: lip remaining at end of move (default 4 units).

health: (default 0) if set to any non-zero value, the button must take damage (any amount) to activate.

light: constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).

color: constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).

model2: path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).

origin: alternate method of setting XYZ origin of .md3 model included with entity (See Notes).

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

sound1to2: the sound played when the door, platform or button moves from state 1 to state 2.

-------- Q3MAP2 KEYS --------
_targetname: Used to attach a misc_model entity to this entity.

_lightmapscale: Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).

_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.

_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.

_celshader: Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.

-------- Q3MAP2 TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.

_layers OR layers: Integer value is the number unique root shaders that will be use on the terrain.

_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.

-------- NOTES --------
Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").
*/

//=============================================================================

/*QUAKED func_door (0 .5 .8) ? START_OPEN - CRUSHER
Normal sliding door entity. By default, the door will activate when player walks close to it or when damage is inflicted to it.

-------- KEYS --------
angle: determines the opening direction of door (up = -1, down = -2).

speed: determines how fast the door moves (default 100).

wait: number of seconds before door returns (default 2, -1 = return immediately)

lip: lip remaining at end of move (default 8)

targetname: if set, a func_button or trigger is required to activate the door.

health: (default 0) if set to any non-zero value, the button must take damage (any amount) to activate.

dmg: damage to inflict on player when he blocks operation of door (default 4). Door will reverse direction when blocked unless CRUSHER spawnflag is set.

team: assign the same team name to multiple doors that should operate together (see Notes).

light: constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).

color: constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).

model2: path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).

origin: alternate method of setting XYZ origin of .md3 model included with entity (See Notes).

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

sound1to2: the sound played when the door, platform or button moves from state 1 to state 2.

sound2to1: the sound played when the door or platform moves from from state 2 to state 1.

soundPos2: the sound played when the door or platform reaches state 2.

soundPos1: the sound played when the door or platform reaches state 1.

-------- Q3MAP2 KEYS --------
_targetname: Used to attach a misc_model entity to this entity.

_lightmapscale: Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).

_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.

_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.

_celshader: Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.

-------- Q3MAP2 TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.

_layers OR layers: Integer value is the number unique root shaders that will be use on the terrain.

_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.

-------- SPAWNFLAGS --------
START_OPEN: the door will spawn in the open state and operate in reverse.

CRUSHER: door will not reverse direction when blocked and will keep damaging player until he dies or gets out of the way.

-------- NOTES --------
Unlike in Quake 2, doors that touch are NOT automatically teamed. If you want doors to operate together, you have to team them manually by assigning the same team name to all of them. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").
*/

//=============================================================================

/*QUAKED func_door_model (0 .5 .8) ?
A model based door entity. By default, the door will activate when player walks close to it. The opening and closing of the door is provided by an animation in the model itself.

-------- KEYS --------
speed: determines the time taken for the door to change state in msec (default 200).

wait: number of seconds before door returns (default 2)

targetname: if set, a func_button or trigger is required to activate the door.

health: (default 0) if set to any non-zero value, the button must take damage (any amount) to activate.

team: assign the same team name to multiple doors that should operate together (see Notes).

light: constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).

color: constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).

model2: path/name of the door model (eg: models/mapobjects/pipe/pipe02.md3).

modelOrigin: means of setting the origin of the model.

scale: scale the model in each of the major axes (e.g. 1.0 1.0 2.0 -- twice as high as normal).

animation: The first frame and number of frames in the door open animation (e.g. 0 10). This will be reversed for the close animation.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

sound1to2: the sound played when the door, platform or button moves from state 1 to state 2.

sound2to1: the sound played when the door or platform moves from from state 2 to state 1.

soundPos2: the sound played when the door or platform reaches state 2.

soundPos1: the sound played when the door or platform reaches state 1.

-------- Q3MAP2 KEYS --------

_targetname: Used to attach a misc_model entity to this entity.

_lightmapscale: Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).

_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.

_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.

_celshader: Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.

-------- Q3MAP2 TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.

_layers OR layers: Integer value is the number unique root shaders that will be use on the terrain.

_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.

-------- NOTES --------
Every func_door_model needs its model to be positioned, scaled and orientated using the modelOrigin, scale and angle/angles keys repsectively.
*/

//=============================================================================

/*QUAKED func_door_rotating (0 .5 .8) ? START_OPEN - CRUSHER REVERSE - X_AXIS Y_AXIS
Rotating door entity. By default, the door will activate when player walks close toit.

-------- KEYS --------
speed: determines how fast the door moves (in degrees/second).

rotatorAngle: the number of degrees through which to rotate (default 90).

wait: number of seconds before door returns (default 2)

targetname: if set, a func_button or trigger is required to activate the door.

health: (default 0) if set to any non-zero value, the button must take damage (any amount) to activate.

dmg: damage to inflict on player when he blocks operation of door (default 4). Door will reverse direction when blocked unless CRUSHER spawnflag is set.

team: assign the same team name to multiple doors that should operate together (see Notes).

light: constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).

color: constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).

model2: path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).

origin: alternate method of setting XYZ origin of .md3 model included with entity (See Notes).

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

sound1to2: the sound played when the door, platform or button moves from state 1 to state 2.

sound2to1: the sound played when the door or platform moves from from state 2 to state 1.

soundPos2: the sound played when the door or platform reaches state 2.

soundPos1: the sound played when the door or platform reaches state 1.

-------- Q3MAP2 KEYS --------
_targetname: Used to attach a misc_model entity to this entity.

_lightmapscale: Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).

_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.

_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.

_celshader: Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.

-------- Q3MAP2 TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.

_layers OR layers: Integer value is the number unique root shaders that will be use on the terrain.

_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.

-------- SPAWNFLAGS --------
START_OPEN: the door will spawn in the open state and operate in reverse.

CRUSHER: door will not reverse direction when blocked and will keep damaging player until he dies or gets out of the way.

REVERSE: the door will open the other way.

X_AXIS: rotate on the X axis instead of the Z.

Y_AXIS: rotate on the Y axis instead of the Z.

-------- NOTES --------
Unlike in Quake 2, doors that touch are NOT automatically teamed. If you want doors to operate together, you have to team them manually by assigning the same team name to all of them. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").

You need to have an origin brush as part of this entity.  The center of that brush will be the point around which it is rotated. It will rotate around the Z axis by default.  You can check either the X_AXIS or Y_AXIS box to change that.
*/

//=============================================================================

/*QUAKED func_group (0 .5 .8) ?
This is not an entity as such. It is strictly an editor utility to group world brushes and patches together for convenience (selecting, moving, copying, etc). You cannot group entities with this.

-------- OLD TERRAIN KEYS (note: obsolete with Q3Map2) --------
alphamap: this is the path/name for the art file used to guide the mapping of textures on the terrain surface.

layers: this integer value is the number unique root shaders that will be use on the terrain.

shader: this is the path to the metashader used to assign textures to the terrain entity.

terrain: this is an on/off flag. When set to 1, the entity becomes a terrain entity. Note: unecessary when compiling with Q3Map2. See Q3Map2 keys.

-------- Q3MAP2 KEYS --------
_lightmapscale: Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).

_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.

_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.

_celshader: Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.

-------- Q3MAP2 TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.

_layers OR layers: Integer value is the number unique root shaders that will be use on the terrain.

_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.

-------- NOTES --------
The TAB key can be used to flip through the component pieces of a selected func_group entity, isolating individual components. To make a func_group into a terrain entity, refer to the Terrain Construction documentation.
*/

//=============================================================================

/*QUAKED func_pendulum (0 .5 .8) ?
Solid entity that describes a pendulum back and forth rotation movement. Rotates on the X axis by default. Pendulum frequency is a physical constant based on the length of the beam and gravity. Blocking the pendulum instantly kills a player.

-------- KEYS --------
angle: angle offset of axis of rotation from default X axis (default 0).

speed: angle of swing arc in either direction from initial position (default 30).

phase: sets the start offset of the swinging cycle. Values must be 0 < phase < 1. Any integer phase value is the same as no offset (default 0).

noise: path/name of .wav file to play. Use looping sounds only (eg. sound/world/drone6.wav).

model2: path/name of model to include (eg: models/mapobjects/jets/jets01.md3).

origin: alternate method of setting XYZ origin of entity's rotation axis and .md3 model included with entity (default "0 0 0" - See Notes).

light: constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).

color: constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- Q3MAP2 KEYS --------
_targetname: Used to attach a misc_model entity to this entity.

_lightmapscale: Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).

_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.

_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.

_celshader: Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.

-------- Q3MAP2 TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.

_layers OR layers: Integer value is the number unique root shaders that will be use on the terrain.

_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.

-------- NOTES --------
You need to have an origin brush as part of this entity. The center of that brush will be the point through which the rotation axis passes. Setting the origin key is simply an alternate method to using an origin brush. Pendulum will rotate along the X axis by default. Very crude operation: pendulum cannot rotate along Z axis, the speed of swing (frequency) is not adjustable. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").
*/

//=============================================================================

/*QUAKED func_plat (0 .5 .8) ? DONT_WAIT
Rising platform the player can ride to reach higher places. Plats must always be drawn in the raised position, so they will operate and be lighted correctly but they spawn in the lowered position. The plat will stay in the raised position until the player steps off. There are no proper sounds for this entity, only beep noises. It will spawn in the game and work properly but it sounds silly (see Notes). If DONT_WAIT is set then the platform will not wait for a client to leave before returning to its original position.

-------- KEYS --------
speed: determines how fast the plat moves (default 150).

lip: lip remaining at end of move (default 16). Has no effect if "height" is set.

height: if set, this will determine the total amount of vertical travel of the plat.

dmg: damage to inflict on player when he blocks operation of plat (default 4). Plat will reverse direction when blocked.

targetname: if set, the trigger that points to this will raise the plat each time it fires. The plat raises and comes back down a second later if no player is on it.

light: constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).

color: constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).

model2: path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).

origin: alternate method of setting XYZ origin of .md3 model included with entity (See Notes).

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

sound1to2: the sound played when the door, platform or button moves from state 1 to state 2.

sound2to1: the sound played when the door or platform moves from from state 2 to state 1.

soundPos2: the sound played when the door or platform reaches state 2.

soundPos1: the sound played when the door or platform reaches state 1.

-------- Q3MAP2 KEYS --------
_targetname: Used to attach a misc_model entity to this entity.

_lightmapscale: Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).

_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.

_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.

_celshader: Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.

-------- Q3MAP2 TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.

_layers OR layers: Integer value is the number unique root shaders that will be use on the terrain.

_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.

-------- NOTES --------
By default, the total amount of vertical travel of a platform is implicitly determined by the overall vertical size of the brushes of which it's made minus the lip value. But if the "height" key is used, then the total amount of vertical travel of the plat will be exactly that value regardless of the shape and size of the plat and regardless of the value of the "lip" key. Using the "height" key is the best method for any kind of platforms and the only possible one for thin plats which need to travel vertical distances many times their own thickness. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

There is a way to make plats play proper sounds. Just create a sound\movers\plats folder under baseq3 and put 2 sounds named pt1_strt.wav and pt1_end.wav in it. Those can be the renamed sounds from the Q2 plats or renamed copies of the sound\movers\doors sounds you can extract from your pak0.pk3 file or new custom sounds if you're up to it. Thanks to Fragzilla for the tip.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").
*/

//=============================================================================

/*QUAKED func_rotating (0 .5 .8) ? - - X_AXIS Y_AXIS
Solid entity that rotates continuously. Rotates on the Z axis by default and requires an origin brush. It will always start on in the game and is not targetable.

-------- KEYS --------
speed: determines how fast entity rotates (default 100).

noise: path/name of .wav file to play. Use looping sounds only (eg. sound/world/drone6.wav).

model2: path/name of model to include (eg: models/mapobjects/bitch/fembotbig.md3).

origin: alternate method of setting XYZ origin of entity's rotation axis and .md3 model included with entity (default "0 0 0" - See Notes).

light: constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).

color: constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- Q3MAP2 KEYS --------
_targetname: Used to attach a misc_model entity to this entity.

_lightmapscale: Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).

_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.

_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.

_celshader: Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.

-------- Q3MAP2 TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.

_layers OR layers: Integer value is the number unique root shaders that will be use on the terrain.

_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.

-------- SPAWNFLAGS --------
X_AXIS: entity will rotate along the X axis.

Y_AXIS: entity will rotate along the Y axis.

-------- NOTES --------
You need to have an origin brush as part of this entity. The center of that brush will be the point through which the rotation axis passes. Setting the origin key is simply an alternate method to using an origin brush. It will rotate along the Z axis by default. You can check either the X_AXIS or Y_AXIS box to change that. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").
*/

//=============================================================================

/*QUAKED func_static (0 .5 .8) ?
Static non-solid bspmodel. Can be used for conditional walls and models.

-------- KEYS --------
model2: path/name of model to include (eg: models/mapobjects/bitch/fembotbig.md3).

origin: alternate method of setting XYZ origin of .md3 model included with entity (See Notes).

light: constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).

color: constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).

targetname: NOT SUPPORTED BY RENDERER - if set, a func_button or trigger can make entity disappear from the game (See Notes).

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- Q3MAP2 KEYS --------
_targetname: Used to attach a misc_model entity to this entity.

_lightmapscale: Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).

_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.

_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.

_celshader: Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.

-------- Q3MAP2 TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.

_layers OR layers: Integer value is the number unique root shaders that will be use on the terrain.

_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.

-------- NOTES --------
When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value. If a model is included with a targeted func_static, the brush(es) of the entity will be removed from the game but the .md3 model won't: it will automatically be moved to the (0 0 0) world origin so you should NOT include an .md3 model to a targeted func_static.

Because the map has only a single bot navigation file, func_static's cannot be used to make significant changes in game play flow between differing game types.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").
*/

//=============================================================================

/*QUAKED func_timer (0 .5 .8) (-8 -8 -8) (8 8 8) START_ON
Time delay trigger that will continuously fire its targets after a preset time delay. The time delay can also be randomized. When triggered, the timer will toggle on/off.

-------- KEYS --------
wait: delay in seconds between each triggering of its targets (default 1).

random: random time variance in seconds added or subtracted from "wait" delay (default 0 - see Notes).

target: this points to the entities to trigger.

targetname: a func_button or trigger that points to this will toggle the timer on/off when activated.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- SPAWNFLAGS --------
START_ON: timer will start on in the game and continuously fire its targets.

-------- NOTES --------
When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).
*/

//=============================================================================

/*QUAKED func_train (0 .5 .8) ? START_OFF BLOCK_STOPS
Trains are moving solids that follow a string of path_corner entities. Trains in Tremulous are less basic than in Q3A, they also require an origin brush (see Notes).

-------- KEYS --------
speed: speed of displacement of train (default 100 or overridden by speed value of path).

target: this points to the first path_corner of the path which is also the spawn location of the train's origin.

model2: path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).

origin: alternate method of setting XYZ origin of the train's brush(es) and .md3 model included with entity (See Notes).

light: constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).

color: constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- SPAWNFLAGS --------
START_OFF: the train will spawn in the off state

BLOCK_STOPS: with this set a train simply stops if blocked, instead of killing.

-------- Q3MAP2 KEYS --------
_targetname: Used to attach a misc_model entity to this entity.

_lightmapscale: Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).

_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.

_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.

_celshader: Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.

-------- Q3MAP2 TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.

_layers OR layers: Integer value is the number unique root shaders that will be use on the terrain.

_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.

-------- NOTES --------
1. Trains instakill anything in their path by default.
2. Trains cannot emit sound.
3. When BLOCK_STOPS is set, trains cannot be stopped just by getting in their way, the player must be wedged between the train and another obstacle to block it.

Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").*/




//=============================================================================

INFO_* ENTITIES

//=============================================================================

/*QUAKED info_notnull (0 .5 0) (-8 -8 -8) (8 8 8)
Used as a positional target for entities that can use directional pointing. A target_position can be used instead of this but was kept in Q3A for legacy purposes.

-------- KEYS --------
targetname: must match the target key of entity that uses this for pointing.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).
*/


//=============================================================================

/*QUAKED info_null (0 .5 0) (-8 -8 -8) (8 8 8)
Used as a positional target for light entities to create a spotlight effect. A target_position can be used instead of this but was kept in Q3A for legacy purposes.

-------- KEYS --------
targetname: must match the target key of entity that uses this for pointing.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).
*/

//=============================================================================

/*QUAKED info_player_intermission (1 0 1) (-8 -8 -8) (8 8 8)
Camera for intermission screen between matches. This also automatically generates the podium for bot arena matches (see Notes). Can be aimed by setting the "angles" key or targeting an pointing to an aiming entity. Use only one per level.

-------- KEYS --------
angles: alternate "pitch, yaw, roll" angles method of aiming intermission camera (default 0 0 0).

target: point this to an info_notnull or target_position entity to set the camera's pointing angles.

-------- NOTES --------
In genuine bot arena matches, the podium for the 1st, 2nd and 3rd place players at the end of the match is generated by this entity. The podium's origin will automatically be located 128 units in the direction of the camera's view and 84 units down from the y height of the view line at that point. It will also always be generated on a level plane regardless of the pointing angle of the camera so if that angle is too steep, part of the podium model might not be visible. Make sure you leave at least 106 units of free space in front of where the camera points to otherwise the podium model won't be visible at all.
*/

//=============================================================================

/*QUAKED info_alien_intermission (1 0 1) (-8 -8 -8) (8 8 8)
Camera for aliens before they spawn. Can be aimed by setting the "angles" key or targeting an pointing to an aiming entity. Use one per level.

-------- KEYS --------
angles: alternate "pitch, yaw, roll" angles method of aiming intermission camera (default 0 0 0).

target: point this to an info_notnull or target_position entity to set the camera's pointing angles.
*/

//=============================================================================

/*QUAKED info_human_intermission (1 0 1) (-8 -8 -8) (8 8 8)
Camera for humans before they spawn. Can be aimed by setting the "angles" key or targeting an pointing to an aiming entity. Use one per level.

-------- KEYS --------
angles: alternate "pitch, yaw, roll" angles method of aiming intermission camera (default 0 0 0).

target: point this to an info_notnull or target_position entity to set the camera's pointing angles.
*/



//=============================================================================

MISC_* ENTITIES

//=============================================================================

/*QUAKED misc_model (1 .5 .25) (-16 -16 -16) (16 16 16)
Generic placeholder for inserting MD3 models in game. Requires compilation of map geometry to be added to level. If the map is compiled with Q3Map2, then ASE, 3DS, OBJ and other model formats are supported.

-------- KEYS --------
angle: direction in which model will be oriented.

model: path/name of model to use (eg: models/mapobjects/teleporter/teleporter.md3).

-------- Q3MAP2 KEYS --------
angles: Individual control of PITCH, YAW, and ROLL (default 0 0 0).

modelscale: Floating-point value used to scale a model up or down (default 1.0).

modelscale_vec: Floating-point vector used to scale a model's axes individually (default 1.0 1.0 1.0).

_remap: Used to remap textures/shaders in the model. To remap all shaders to a given shader, use "*;models/mymodel/mytexture". To remap a specific shader, use "models/mymodel/old;models/mymodel/new".

target: Used to attach the misc_model to a brush entity, where its "targetname" key is the same value.

_lightmapscale: Floating point value scaling the resolution of lightmaps on this model (if model is using lightmapped shaders) (default 1.0).

_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.

_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.

_celshader: Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.
*/

//=============================================================================

/*QUAKED misc_anim_model (1 .5 .25) (-16 -16 -16) (16 16 16) TRIGGER_TOGGLE
A little like misc_model except that it is a game entity and does not become part of the map geometry. An instance of this entity will draw an arbituary md3 in the world with an arbituary frame or with an animation.

-------- KEYS --------
angle: direction in which model will be oriented.

radius: The scale of the model compared to its original size. Defaults to 1.0.

animation: The guts of the entity. This is identical to an entry in an animation.cfg - Start Frame, Number of frames, Looping Frames, Frame rate. For example 0 30 30 20 will play frames 0 through 30 continously at 20 fps.

model: path/name of model to use (eg: models/mapobjects/teleporter/teleporter.md3).

-------- SPAWNFLAGS --------
TRIGGER_TOGGLE: With this set triggering the entity disables the model altogether as opposed to the regular behaviour of toggling the animation.
*/

//=============================================================================

/*QUAKED misc_particle_system (1 .5 .25) (-8 -8 -8) (8 8 8) SPAWN_DISABLED
A particle system entity.

-------- KEYS --------
psName: The name of the particle system to spawn at this entity.

-------- SPAWNFLAGS --------
SPAWN_DISABLED: Spawn disabled.

-------- NOTES --------
Triggering this entity toggles it on and off.
*/

//=============================================================================
/*QUAKED misc_light_flare (.65 .65 1) (-8 -8 -8) (8 8 8) SPAWN_DISABLED
A light flare entity.

-------- KEYS --------
targetShaderName: The name of the shader of the light flare.

radius: The radius key is a vector.
The first component is the size of the light flare. The radius is calculated by taking the distance of the viewer from the light flare and dividing by this key, so the larger the key value, the smaller the flare. Values between 2 and 10 are sensible.
The second component indicates the angle around the direction the flare points for which it is visible. For example a value of 90 means that you can see the flare while infront of the entity, but not when behind it. If set to zero the light flare will be visible from any angle
The third component is similar to the first except that it specifies the size of the light source rather than the size of the light flare itself. This is useful when the higher detail flare fading modes are enabled. If this is set to the same value as the first component, fading will commence as soon as the edge of the light flare is occluded by some surface between the viewer and the flare. If it is set larger the flare will overlap the occluding surface before it begins to fade.

angles: This reflects which direction the flare points. It is not important unless the second component of the radius key is employed. angles is a vector of PITCH YAW ROLL. For example a value of "90 0 0" would create a flare pointing down. ROLL is redundant in this context and can be set arbitrarily.

-------- SPAWNFLAGS --------
SPAWN_DISABLED: Spawn disabled.

-------- NOTES --------
Triggering this entity toggles it.
*/

//=============================================================================

/*QUAKED misc_portal_camera (1 .5 .25) (-8 -8 -8) (8 8 8) SLOWROTATE FASTROTATE
Portal camera. This camera is used to project its view onto a portal surface in the level through the intermediary of a misc_portal_surface entity. Use the "angles" key or target a target_position or info_notnull entity to set the camera's pointing direction.

-------- KEYS --------
angles: this sets the pitch and yaw aiming angles of the portal camera (default 0 0). Use "roll" key to set roll angle.

target: point this to a target_position entity to set the camera's pointing direction.

targetname: a misc_portal_surface portal surface indicator must point to this.

roll: roll angle of camera. A value of 0 is upside down and 180 is the same as the player's view.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- SPAWNFLAGS --------
SLOWROTATE: makes the portal camera rotate slowly along the roll axis.

FASTROTATE: makes the portal camera rotate faster along the roll axis.

NOROTATE: no rolling at all.

-------- NOTES --------
Both the setting "angles" key or "targeting a target_position" methods can be used to aim the camera. However, the target_position method is simpler. In both cases, the "roll" key must be used to set the roll angle.
*/

//=============================================================================

/*QUAKED misc_portal_surface (1 .5 .25) (-8 -8 -8) (8 8 8)
Portal surface indicator. This will "lock on" the brush face closest to it and identify as a portal. The view displayed on the portal surface is the view of the misc_portal_camera that this entity targets. Also used for mirrors (see Notes).

-------- KEYS --------
target: point this to a misc_portal_camera that "sees" the view you want to display on the portal.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- NOTES --------
The entity must be no farther than 64 units away from the portal surface to lock onto it. To make a mirror, apply the common/mirror shader to the surface, place this entity near it but don't target a misc_portal_camera.
*/

//=============================================================================

/*QUAKED misc_teleporter_dest (1 .5 .25) (-32 -32 -24) (32 32 -16)
Teleport destination location point for trigger_teleporter entities.

-------- KEYS --------
angle: direction in which player will look when teleported.

targetname: make the trigger_teleporter point to this.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).
*/

/*QUAKED trigger_teleport (.5 .5 .5) ? SPECTATOR SPAWN_DISABLED
Allows client side prediction of teleportation events.
Must point at a target_position, which will be the teleport destination.

If spectator is set, only spectators can use this teleport
Spectator teleporters are not normally placed in the editor, but are created
automatically near doors to allow spectators to move through them
*/



//=============================================================================

PATH_* ENTITIES

//=============================================================================

/*QUAKED path_corner (.5 .3 0) (-8 -8 -8) (8 8 8)
Path corner entity that func_trains can be made to follow.

-------- KEYS --------
target: point to next path_corner in the path.

targetname: the train following the path or the previous path_corner in the path points to this.

speed: speed of func_train while moving to the next path corner. This will override the speed value of the train.

wait: number of seconds func_train will pause on path corner before moving to next path corner (default 0 - see Notes).

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- NOTES --------
Setting the wait key to -1 will not make the train stop on the path corner, it will simply default to 0.
*/



//=============================================================================

TARGET_* ENTITIES

//=============================================================================

/*QUAKED target_hurt (1 0 0) (-8 -8 -8) (8 8 8)
When triggered, this hurts the entity that caused the trigger.

-------- KEYS --------
dmg: amount of damage to deal (default: 5)
*/

/*QUAKED target_rumble (1 0 0) (-8 -8 -8) (8 8 8)
When triggered, this initiates a level-wide rumble effect. All players are affected.

-------- KEYS --------
speed: severity of the quake (default: 100)

count: duration of the quake (default: 10)
*/

/*QUAKED target_alien_win (1 0 0) (-8 -8 -8) (8 8 8)
When triggered, this causes an unconditional win for the alien team.
*/

/*QUAKED target_human_win (1 0 0) (-8 -8 -8) (8 8 8)
When triggered, this causes an unconditional win for the human team.
*/

/*QUAKED target_delay (0 .7 .7) (-8 -8 -8) (8 8 8)
Time delay trigger intermediary. Like a target_relay, this can only be fired by other triggers which will cause it in turn to fire its own targets.

-------- KEYS --------
targetname: activating trigger points to this.

target: this points to entities to activate when this entity is triggered.

wait: delay in seconds from when this gets triggered to when it fires its own targets (default approx. 1).

delay: same as wait? replaces it? WTF?...I'm confused now.

random: random time variance in seconds added or subtracted from "wait" delay (default 0 - see Notes).

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- NOTES --------
When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).
*/

//=============================================================================

/*QUAKED target_kill (0 .5 0) (-8 -8 -8) (8 8 8)
This will kill the player who activates the trigger that fires this target.

-------- KEYS --------
targetname: the activating trigger points to this.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).
*/

//=============================================================================

/*QUAKED target_location (0 .5 0) (-8 -8 -8) (8 8 8)
Location marker used by bots and players for team orders and team chat in the course of Teamplay games. The closest target_location in sight is used for the location. If none is in sight, the closest in distance is used.

-------- KEYS --------
message:  name of the location (text string). Displayed in parentheses in front of all team chat and order messages.

count: color of the location text displayed in parentheses during team chat. Set to 0-7 for color.
   0: white (default)
   1: red
   2: green
   3: yellow
   4: blue
   5: cyan
   6: magenta
   7: white
   
notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).
*/

//=============================================================================

/*QUAKED target_position (0 .5 0) (-8 -8 -8) (8 8 8)
Aiming target for entities like light, misc_portal_camera and trigger_push (jump pads) in particular.

-------- KEYS --------
targetname: the entity that requires an aiming direction points to this.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- NOTES --------
To make a jump pad, place this entity at the highest point of the jump and target it with a trigger_push entity.
*/

//=============================================================================

/*QUAKED target_print (0 .5 0) (-8 -8 -8) (8 8 8) HUMAN_TEAM ALIEN_TEAM PRIVATE
This will print a message on the center of the screen when triggered. By default, all the clients will see the message.

-------- KEYS --------
message: text string to print on screen.

targetname: the activating trigger points to this.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- SPAWNFLAGS --------
HUMAN_TEAM: only the human team players will see the message.
ALIEN_TEAM: only the alien team players will see the message.
PRIVATE: only the player that activates the target will see the message.
*/

//=============================================================================

/*QUAKED target_push (.5 .5 .5) (-8 -8 -8) (8 8 8) BOUNCEPAD NOSOUND
This can be used to create jump pads and launch ramps. The direction of push can be set by the "angles" key or pointing to a target_position or info_notnull entity. Unlike trigger_push, this is NOT client side predicted and must be activated by a trigger.

-------- KEYS --------
angles: this sets the pitch and yaw aiming angles of push entity (default 0 0). The roll angle does not apply.

speed: speed of push (default 1000). Has no effect if entity targets an aiming entity.

targetname: the activating trigger points to this. Push originates from the location of the trigger.

target: this points to the aiming entity to which the player will jump.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- SPAWNFLAGS --------
BOUNCEPAD: if set, trigger will play bounce noise instead of beep noise when activated (recommended).
NOSOUND:	 if set, no sound is played at all

-------- NOTES --------
To make a jump pad or launch ramp, create a trigger_multiple where the jump must originate. Place the target_push directly above the trigger_multiple and place the target_position entity at the highest point of the jump. Target the trigger_multiple to the target_push and target the target_push to the target_position/info_notnull (or set the target_push's "angles" key). Note that the "angle" key also works.
*/

//=============================================================================

/*QUAKED target_relay (0 .7 .7) (-8 -8 -8) (8 8 8) HUMAN_ONLY ALIEN_ONLY RANDOM
This can only be activated by other triggers which will cause it in turn to activate its own targets.

-------- KEYS --------
targetname: activating trigger points to this.

target: this points to entities to activate when this entity is triggered.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- SPAWNFLAGS --------
HUMAN_ONLY: only human team players can activate trigger.
ALIEN_ONLY: only alien team players can activate trigger.
RANDOM: one one of the targeted entities will be triggered at random.
*/

//=============================================================================

/*QUAKED target_score (0 .5 0) (-8 -8 -8) (8 8 8)
This is used to automatically give frag points to the player who activates this. A spawn location entity like info_player_* or CTF respawn points can target this entity to give points to the player when he spawns in the game. Or a trigger can also be used to activate this. The activator of the trigger will get the points.

-------- KEYS --------
targetname: ativating entity points to this.

count: number of frag points to give to player (default 1).

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).
*/

//=============================================================================

/*QUAKED target_speaker (0 .7 .7) (-8 -8 -8) (8 8 8) LOOPED_ON LOOPED_OFF GLOBAL ACTIVATOR
Sound generating entity that plays .wav files. Normal non-looping sounds play each time the target_speaker is triggered. Looping sounds can be set to play by themselves (no activating trigger) or be toggled on/off by a trigger.

-------- KEYS --------
noise: path/name of .wav file to play (eg. sound/world/growl1.wav - see Notes).

wait: delay in seconds between each time the sound is played ("random" key must be set - see Notes).

random: random time variance in seconds added or subtracted from "wait" delay ("wait" key must be set - see Notes).

targetname: the activating button or trigger points to this.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- SPAWNFLAGS --------
LOOPED_ON: sound will loop and initially start on in level (will toggle on/off when triggered).

LOOPED_OFF: sound will loop and initially start off in level (will toggle on/off when triggered).

GLOBAL: sound will play full volume throughout the level.

ACTIVATOR: sound will play only for the player that activated the target.

-------- NOTES --------
The path portion value of the "noise" key can be replaced by the implicit folder character "*" for triggered sounds that belong to a particular player model. For example, if you want to create a "bottomless pit" in which the player screams and dies when he falls into, you would place a trigger_multiple over the floor of the pit and target a target_speaker with it. Then, you would set the "noise" key to "*falling1.wav". The * character means the current player model's sound folder. So if your current player model is Visor, * = sound/player/visor, if your current player model is Sarge, * = sound/player/sarge, etc. This cool feature provides an excellent way to create "player-specific" triggered sounds in your levels.

The combination of the "wait" and "random" keys can be used to play non-looping sounds without requiring an activating trigger but both keys must be used together. The value of the "random" key is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).
*/

//=============================================================================

/*QUAKED target_teleporter (0 .5 0) (-8 -8 -8) (8 8 8)
Activating this will teleport players to the location of the targeted misc_teleporter_dest entity. Unlike trigger_teleport, this entity must be activated by a trigger and does NOT allow client prediction of events.

-------- KEYS --------
targetname: activating trigger points to this.

target: this must point to a misc_teleporter_dest entity.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).
*/




//=============================================================================

TEAM_* ENTITIES

//=============================================================================

/*QUAKED team_human_spawn (0 .2 1) (-40 -40 -4) (40 40 4)
The human spawn point.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/telenode/telenode.md3"
*/

//=============================================================================

/*QUAKED team_human_armoury (0 .2 1) (-40 -40 -13) (40 40 50)
The human armoury.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/arm/arm.md3"
*/

//=============================================================================

/*QUAKED team_human_dcc (0 .2 1) (-35 -35 -13) (35 35 47)
The human defense computer.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/dcc/dcc.md3"
*/

//=============================================================================

/*QUAKED team_human_medistat (0 .2 1) (-35 -35 -7) (35 35 7)
The human medical station.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/medistat/medistat.md3"
*/

//=============================================================================

/*QUAKED team_human_mgturret (0 .2 1) (-25 -25 -20) (25 25 20)
The human machinegun turret.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/mgturret/turret_base.md3"
*/

//=============================================================================

/*QUAKED team_human_reactor (0 .2 1) (-50 -50 -15) (50 50 95)
The human reactor.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/reactor/reactor.md3"
*/

//=============================================================================

/*QUAKED team_human_repeater (0 .2 1) (-15 -15 -15) (15 15 25)
The human repeater.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/repeater/repeater.md3"
*/

//=============================================================================

/*QUAKED team_human_tesla (0 .2 1) (-22 -22 -40) (22 22 40)
The human tesla generator.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/tesla/tesla.md3"
*/

//=============================================================================



/*QUAKED team_alien_spawn (1 .2 0) (-15 -15 -15) (15 15 15)
The alien spawn point.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/eggpod/eggpod.md3"
*/

//=============================================================================

/*QUAKED team_alien_acid_tube (1 .2 0) (-35 -35 -11) (35 35 40)
The alien acid tube.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/acid_tube/acid_tube.md3"
*/

//=============================================================================

/*QUAKED team_alien_barricade (1 .2 0) (-35 -35 -15) (35 35 60)
The alien barricade.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/barricade/barricade.md3"
*/

//=============================================================================

/*QUAKED team_alien_booster (1 .2 0) (-26 -26 -9) (26 26 9)
The alien booster.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/booster/booster.md3"
*/

//=============================================================================

/*QUAKED team_alien_hovel (1 .2 0) (-50 -50 -20) (50 50 20)
The alien hovel.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/hovel/hovel.md3"
*/

//=============================================================================

/*QUAKED team_alien_overmind (1 .2 0) (-45 -45 -15) (45 45 95)
The alien overmind.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/overmind/overmind.md3"
*/

//=============================================================================

/*QUAKED team_alien_trapper (1 .2 0) (-15 -15 -15) (15 15 15)
The alien trapper.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/trapper/trapper.md3"
*/

//=============================================================================



//=============================================================================

TRIGGER_* ENTITIES

//=============================================================================

/*QUAKED trigger_heal (.5 .5 .5) ? START_OFF SLOW
Any player that touches this will be healed. It does heal points of healage each server frame. Targeting the trigger will toggle its effects.

-------- SPAWNFLAGS --------
START_OFF: needs to be triggered (toggle) to activate.

SLOW: changes the heal rate to once per second.

-------- KEYS --------
heal: Health points to heal (default 5)
*/

/*QUAKED trigger_ammo (.5 .5 .5) ? SLOW NOENERGY NOCASE
Any player that touches this will have the ammo for his held weapon restored. It gives ammo in chunks reflected by the key "ammo" each server frame.

-------- SPAWNFLAGS --------
SLOW: changes the ammo rate to once per second.

NOENERGY: disables this entity for energy weapons.

NOCASE: disables this entity for case based weapons.

-------- KEYS --------
ammo: Amount of ammo to give (default 1)
*/

/*QUAKED trigger_gravity (.5 .5 .5) ?
The gravity (for players) within this trigger is determined by the gravity key. Targetting this entity toggles its effects.
NOT THROUGHLY TESTED: please report whether or not this works for you.

-------- KEYS --------
gravity: The gravity within this trigger (default 800).
*/

/*QUAKED trigger_buildable (.5 .5 .5) ? SPAWN_DISABLED NEGATE
Triggered by a buildable or subset of buildables. If no buildables key is supplied every buildable will trigger this entity.
Targetting this entity toggles it.
NOT THROUGHLY TESTED: please report whether or not this works for you.

-------- SPAWNFLAGS --------
SPAWN_DISABLED: needs to be triggered (toggle) to activate.
NEGATE: negate the trigger condition.

-------- KEYS --------
target: this points to the entity to activate.

buildables: a comma delimited list of buildables which will trigger this entity.

wait: time in seconds until trigger becomes re-triggerable after it's been touched (default 0.2, -1 = trigger once).

random: random time variance in seconds added or subtracted from "wait" delay (default 0 - see Notes).
*/

/*QUAKED trigger_class (.5 .5 .5) ? SPAWN_DISABLED NEGATE
Triggered by a specific class or subset of classes. If no classes key is supplied every class will trigger this entity.
Targetting this entity toggles it.
NOT THROUGHLY TESTED: please report whether or not this works for you.

-------- SPAWNFLAGS --------
SPAWN_DISABLED: needs to be triggered (toggle) to activate.
NEGATE: negate the trigger condition.

-------- KEYS --------
target: this points to the entity to activate.

classes: a comma delimited list of classes which will trigger this entity.

wait: time in seconds until trigger becomes re-triggerable after it's been touched (default 0.2, -1 = trigger once).

random: random time variance in seconds added or subtracted from "wait" delay (default 0 - see Notes).
*/

/*QUAKED trigger_equipment (.5 .5 .5) ? SPAWN_DISABLED NEGATE
Triggered by a player carrying some item (weapon or upgrade) or subset of items. If no equipment key is supplied every human will trigger this entity.
Targetting this entity toggles it.
NOT THROUGHLY TESTED: please report whether or not this works for you.

-------- SPAWNFLAGS --------
SPAWN_DISABLED: needs to be triggered (toggle) to activate.
NEGATE: negate the trigger condition.

-------- KEYS --------
target: this points to the entity to activate.

equipment: a comma delimited list of equipment which will trigger this entity.

wait: time in seconds until trigger becomes re-triggerable after it's been touched (default 0.2, -1 = trigger once).

random: random time variance in seconds added or subtracted from "wait" delay (default 0 - see Notes).
*/

//=============================================================================

/*QUAKED trigger_stage (.5 .5 .5) (-8 -8 -8) (8 8 8)
Fires its targets when the team key reaches stage key.

-------- KEYS --------
target: this points to the entity to activate.

team: the team which triggers this entity; 1 for aliens, 2 for humans

stage: the stage at which this entity is triggered; 1 for stage 2, 2 for stage 3
*/

//=============================================================================

/*QUAKED trigger_win (.5 .5 .5) (-8 -8 -8) (8 8 8)
Fires its targets when the team key wins.

-------- KEYS --------
target: this points to the entity to activate.

team: the team which triggers this entity; 1 for aliens, 2 for humans
*/

//=============================================================================

/*QUAKED trigger_always (.5 .5 .5) (-8 -8 -8) (8 8 8)
Automatic trigger. It will fire the entities it targets as soon as it spawns in the game.

-------- KEYS --------
target: this points to the entity to activate.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).
*/

//=============================================================================

/*QUAKED trigger_hurt (.5 .5 .5) ? START_OFF - SILENT NO_PROTECTION SLOW
Any player that touches this will be hurt by "dmg" points of damage once per server frame (very fast). A sizzling sound is also played while the player is being hurt.

-------- KEYS --------
dmg: number of points of damage inflicted to player per server frame (default 5 - integer values only).

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- SPAWNFLAGS --------
START_OFF needs to be triggered (toggle) for damage

SILENT: supresses the sizzling sound while player is being hurt.

NO_PROTECTION: player will be hurt regardless of protection (see Notes).

SLOW: changes the damage rate to once per second.

-------- NOTES --------
The invulnerability power-up (item_enviro) does not protect the player from damage caused by this entity regardless of whether the NO_PROTECTION spawnflag is set or not. Triggering a trigger_hurt will have no effect if the START_OFF spawnflag is not set. A trigger_hurt always starts on in the game.
*/

//=============================================================================

/*QUAKED trigger_multiple (.5 .5 .5) ?
Variable size repeatable trigger. It will fire the entities it targets when touched by player. Can be made to operate like a trigger_once entity by setting the "wait" key to -1. It can also be activated by another trigger that targets it.

-------- KEYS --------
target: this points to the entity to activate.

targetname: activating trigger points to this.

wait: time in seconds until trigger becomes re-triggerable after it's been touched (default 0.2, -1 = trigger once).

random: random time variance in seconds added or subtracted from "wait" delay (default 0 - see Notes).

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- NOTES --------
When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).
*/

//=============================================================================

/*QUAKED trigger_push (.5 .5 .5) ?
This is used to create jump pads and launch ramps. It MUST point to a target_position or info_notnull entity to work. Unlike target_push, this is client side predicted.

-------- KEYS --------
target: this points to the target_position to which the player will jump.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).

-------- NOTES --------
To make a jump pad or launch ramp, place the target_position/info_notnull entity at the highest point of the jump and target it with this entity.
*/

//=============================================================================

/*QUAKED trigger_teleport (.5 .5 .5) ?
Touching this will teleport players to the location of the targeted misc_teleporter_dest entity. This entity allows client prediction of events.

-------- KEYS --------
target: this must point to a misc_teleporter_dest entity.

notfree: when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.

notteam: when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.

notsingle: when set to 1, entity will not spawn in Single Player mode (bot play mode).
*/



//=============================================================================

WORLDSPAWN ENTITY

//=============================================================================

/*QUAKED worldspawn (0 0 0) ?
Only used for the world.
-------- KEYS --------
message: text to print at user logon. Used for name of level.

music: path/name of looping .wav file used for level's music (eg. music/sonic5.wav).

humanBuildPoints: The maximum amount of power the humans can use. Defaults to 1000.

humanMaxStage: The highest stage the humans are allowed to use [0/1/2]. Defaults to 2.
humanStage2Threshold: The number of kills the humans must aquire to advance to stage 2. Defaults to 50.
humanStage3Threshold: The number of kills the humans must aquire to advance to stage 3. Defaults to 100.

alienBuildPoints: The maximum amount of sentience available to the overmind. Defaults to 1000.

alienMaxStage: The highest stage the aliens are allowed to use [0/1/2]. Defaults to 2.
alienStage2Threshold: The number of kills the aliens must aquire to advance to stage 2. Defaults to 50.
alienStage3Threshold: The number of kills the aliens must aquire to advance to stage 3. Defaults to 100.

disabledEquipment: A comma delimited list of human weapons or upgrades to disable for this map.
disabledClasses: A comma delimited list of alien classes to disable for this map.
disabledBuildables: A comma delimited list of buildables to disable for this map.

_ambient OR ambient: Adds a constant value to overall lighting. Use is not recommended. Ambient light will have a tendency to flatten out variations in light and shade.

_color: RGB value for ambient light color (default is 0 0 0).

gravity: gravity of level (default is normal gravity: 800).

gridsize: granularity of the lightgrid created by q3map. Value is three integers separated by spaces, representing number of units between grid points in X Y Z. Default gridsize value is 128 128 256. Use larger powers of 2 to reduce BSP size and compile time on very large maps.

_blocksize: q3map always splits the BSP tree along the planes X=_blocksize*n and Y=_blocksize*n. Default _blocksize value is 1024. Increase the blocksize using larger powers of 2 to reduce compile times on very large maps with a low structural brush density.

-------- Q3MAP2 KEYS --------
_minlight: Minimum light value, levelwide. Uses the _color key to set color. Does not add unlike ambient.

_minvertexlight: Minimum vertex lighting, levelwide.

_mingridlight: Minimum lightgrid (dynamic entity lighting) levelwide.

_keeplights: Keep light entities in the BSP. Normally stripped out by the BSP process and read from the .map file by the lighting phase.

_noshadersun: Ignore q3map_sun/sun directives in sky shaders and ONLY use entity sun lights.

_farplanedist: Limit on how many units the vis phase of compilation can see. Used in combination with level-wide fog, it can help reduce r_speeds on large, open maps.

_foghull: Shader to use for "fog hull." Foghull shader should be a sky shader. Omit the "textures/" prefix.

_lightmapscale: Floating point value scaling the resolution of lightmaps on brushes/patches in the world. Can be overridden in func_group (or other entities) (default 1.0).

_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.

_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.

_celshader: Sets the cel shader used for this geometry. Note: omit the "textures/" prefix. Overridable in entities.

-------- Q3MAP2 TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.

_layers OR layers: Integer value is the number unique root shaders that will be use on the terrain.

_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.
*/

